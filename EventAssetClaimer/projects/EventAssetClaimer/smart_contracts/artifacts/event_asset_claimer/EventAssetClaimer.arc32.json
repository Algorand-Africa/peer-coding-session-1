{
    "hints": {
        "createApplication()void": {
            "call_config": {
                "no_op": "ALL"
            }
        },
        "bootstrap(pay,string,uint64,string,string)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claimAsset(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "EventAssetClaimer",
        "methods": [
            {
                "name": "createApplication",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "mbrTxn"
                    },
                    {
                        "type": "string",
                        "name": "ipfsUrl"
                    },
                    {
                        "type": "uint64",
                        "name": "numberOfUnits"
                    },
                    {
                        "type": "string",
                        "name": "assetName"
                    },
                    {
                        "type": "string",
                        "name": "assetUnitName"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "claimAsset",
                "args": [
                    {
                        "type": "uint64",
                        "name": "assetId"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}